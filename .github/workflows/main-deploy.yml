name: main-deploy
run-name: "[main-deploy] Deploy \"${{ github.ref_name }}\" by ${{ github.actor }}"

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      isPrerelease:
        description: 'Is this a prerelease?'
        required: false
        default: true
        type: boolean
      versionSuffix:
        description: 'Suffix for prerelease (e.g. canary-xxxx, empty for stable)'
        required: false
        type: string
      rebaseDevToMain:
        description: 'Rebase develop to main (default: true if merge in main)'
        required: false
        default: false
        type: boolean

env:
  DEFAULT_BRANCH: main

jobs:
  context:
    if: >
      (github.event_name == 'push' && 
       (contains(github.event.head_commit.message, 'Merge') || 
        contains(github.event.head_commit.message, 'merge'))) || 
      github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.vars.outputs.branch }}
      isPrerelease: ${{ steps.vars.outputs.isPrerelease }}
      versionSuffix: ${{ steps.vars.outputs.versionSuffix }}
      publishTag: ${{ steps.vars.outputs.publishTag }}
      rebaseDevToMain: ${{ steps.vars.outputs.rebaseDevToMain }}
    steps:
      - name: Set Context Variables
        id: vars
        run: |
          # Default values for main push
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref_name }}" == "main" ]]; then
            branch="main"
            isPrerelease="false"
            versionSuffix=""
            publishTag="latest"
            rebaseDevToMain="true"
          else
            # Manual dispatch values
            branch="${GITHUB_REF_NAME}"
            isPrerelease="${{ inputs.isPrerelease || 'true' }}"
            versionSuffix="${{ inputs.versionSuffix || '' }}"
            rebaseDevToMain="${{ inputs.rebaseDevToMain || 'false' }}"
            
            if [[ "$isPrerelease" == "true" ]]; then
              publishTag="canary"
              # Generate canary suffix if not provided
              if [[ -z "$versionSuffix" ]]; then
                short_sha="${GITHUB_SHA:0:7}"
                date_part=$(date +%Y%m%d)
                versionSuffix="canary-${date_part}-${short_sha}"
              fi
            else
              publishTag="latest"
            fi
          fi
          
          # Set outputs
          echo "branch=$branch" >> $GITHUB_OUTPUT
          echo "isPrerelease=$isPrerelease" >> $GITHUB_OUTPUT
          echo "versionSuffix=$versionSuffix" >> $GITHUB_OUTPUT
          echo "publishTag=$publishTag" >> $GITHUB_OUTPUT
          echo "rebaseDevToMain=$rebaseDevToMain" >> $GITHUB_OUTPUT

  lint:
    needs: [context]
    uses: ./.github/workflows/job-lint.yml
    with:
      branch: ${{ needs.context.outputs.branch }}
    secrets:
      KEY_SSH: ${{ secrets.KEY_SSH }}
      KEY_GPG: ${{ secrets.KEY_GPG }}
      GIT_EMAIL: ${{ secrets.GIT_EMAIL }}

  build:
    needs: [lint, context]
    uses: ./.github/workflows/job-build.yml
    with:
      branch: ${{ needs.context.outputs.branch }}
    secrets:
      KEY_SSH: ${{ secrets.KEY_SSH }}

  unit-test:
    needs: [build, context]
    uses: ./.github/workflows/job-unit-test.yml
    with:
      branch: ${{ needs.context.outputs.branch }}
    secrets:
      KEY_SSH: ${{ secrets.KEY_SSH }}

  integration-test:
    needs: [build, context]
    uses: ./.github/workflows/job-integration-test.yml
    with:
      branch: ${{ needs.context.outputs.branch }}
    secrets:
      KEY_SSH: ${{ secrets.KEY_SSH }}

  create-release:
    needs: [unit-test, integration-test, context]
    uses: ./.github/workflows/job-create-github-release.yml
    with:
      branch: ${{ needs.context.outputs.branch }}
      versionSuffix: ${{ needs.context.outputs.versionSuffix }}
      isPrerelease: ${{ needs.context.outputs.isPrerelease }}
    secrets:
      KEY_SSH: ${{ secrets.KEY_SSH }}
      KEY_GPG: ${{ secrets.KEY_GPG }}
      GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
      GH_TOKEN:  ${{ secrets.GITHUB_TOKEN }}

  publish-npm:
    needs: [create-release, context]
    uses: ./.github/workflows/job-publish-npm.yml
    with:
      branch: ${{ needs.context.outputs.branch }}
      npmTag: ${{ needs.context.outputs.publishTag }}
    secrets:
      KEY_SSH: ${{ secrets.KEY_SSH }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  docs:
    needs: [unit-test, integration-test, context]
    if: needs.context.outputs.branch == 'main' && needs.context.outputs.isPrerelease == 'false'
    name: Generate Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          ssh-key: ${{ secrets.KEY_SSH }}

      - name: Setup Bun Project
        uses: ./.github/actions/setup-bun-project

      - name: Generate Docs
        run: bun run docs

      - name: Upload Documentation
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs

  rebase-dev:
    needs: [create-release, context]
    if: needs.context.outputs.rebaseDevToMain == 'true'
    uses: ./.github/workflows/job-rebase.yml
    with:
      from: develop
      to: main
    secrets:
      KEY_SSH: ${{ secrets.KEY_SSH }}
      GIT_EMAIL: ${{ secrets.GIT_EMAIL }}